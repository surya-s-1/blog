{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHI220632\\\\Downloads\\\\Blog\\\\blog\\\\src\\\\components\\\\homepage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/api/blog/posts');\n        const data = await response.json();\n        setPosts(data);\n      } catch (err) {\n        console.error('Error fetching data: ', err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/post/${post.post_is}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"by \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useState","useEffect","Link","jsxDEV","_jsxDEV","HomePage","_s","posts","setPosts","fetchPosts","response","fetch","data","json","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","to","post_is","username","post_id","_c","$RefreshReg$"],"sources":["C:/Users/SATHI220632/Downloads/Blog/blog/src/components/homepage.js"],"sourcesContent":["import {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function HomePage() {\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:9000/api/blog/posts')\r\n                const data = await response.json()\r\n                setPosts(data)\r\n            } catch (err) {\r\n                console.error('Error fetching data: ', err)\r\n            }\r\n        }\r\n\r\n        fetchPosts()\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <h2>Recent Posts</h2>\r\n            {posts.length > 0 ? (\r\n                <div>\r\n                    {\r\n                        posts.map((post) => (\r\n                            <div key={post.post_id}>\r\n                                <Link to={`/post/${post.post_is}`}>\r\n                                </Link>\r\n                                <p><i>by <b>{post.username}</b></i></p>\r\n                                <hr />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            ) : (\r\n                <p> No posts available</p>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,IAAI,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAI;IACV,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC/C;IACJ,CAAC;IAEDL,UAAU,CAAC,CAAC;EAChB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIL,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBd,KAAK,CAACe,MAAM,GAAG,CAAC,gBACblB,OAAA;MAAAa,QAAA,EAEQV,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACXpB,OAAA;QAAAa,QAAA,gBACIb,OAAA,CAACF,IAAI;UAACuB,EAAE,EAAG,SAAQD,IAAI,CAACE,OAAQ;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACPjB,OAAA;UAAAa,QAAA,eAAGb,OAAA;YAAAa,QAAA,GAAG,KAAG,eAAAb,OAAA;cAAAa,QAAA,EAAIO,IAAI,CAACG;YAAQ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvCjB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJAG,IAAI,CAACI,OAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,gBAENjB,OAAA;MAAAa,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACf,EAAA,CAtCuBD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}