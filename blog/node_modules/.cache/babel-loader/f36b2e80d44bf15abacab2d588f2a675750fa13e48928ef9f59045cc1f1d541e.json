{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHI220632\\\\Downloads\\\\Blog\\\\blog\\\\src\\\\components\\\\PAGE_postdetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"./COMPONENT_navbar\";\nimport useAuth from \"./FUNCTION_auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostDetails() {\n  _s();\n  useAuth();\n  const post_id = useParams().post_id;\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const postResponse = await fetch(`http://localhost:9000/api/blog/posts/post/${post_id}`);\n        const postData = await postResponse.json();\n        const commentResponse = await fetch(`http://localhost:9000/api/blog/comments/post/${post_id}`);\n        const commentData = await commentResponse.json();\n        setPost(postData);\n        setComments(commentData);\n      } catch (err) {\n        console.error('Error fetching post: ', err);\n      }\n    };\n    fetchPost();\n  }, []);\n  const handleAddComment = async () => {\n    const post_id = post_id;\n    const response = await fetch('http://localhost:9000/api/blog/login', {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"by \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => comment.comment ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"by \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }, this)]\n        }, comment.comment_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No comments available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"75\",\n        placeholder: \"Add a comment...\",\n        value: newComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Post unavailable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(PostDetails, \"VOFh4gLMRmenIlCoFd5vJl1Noa8=\", false, function () {\n  return [useAuth, useParams];\n});\n_c = PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","NavBar","useAuth","jsxDEV","_jsxDEV","PostDetails","_s","post_id","post","setPost","comments","setComments","newComment","setNewComment","fetchPost","postResponse","fetch","postData","json","commentResponse","commentData","err","console","error","handleAddComment","response","method","body","JSON","stringify","formData","headers","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","username","length","map","comment","comment_id","rows","cols","placeholder","value","_c","$RefreshReg$"],"sources":["C:/Users/SATHI220632/Downloads/Blog/blog/src/components/PAGE_postdetails.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NavBar from \"./COMPONENT_navbar\";\r\nimport useAuth from \"./FUNCTION_auth\";\r\n\r\nexport default function PostDetails() {\r\n    useAuth()\r\n    \r\n    const post_id = useParams().post_id\r\n\r\n    const [post, setPost] = useState(null)\r\n    const [comments, setComments] = useState([])\r\n    const [newComment, setNewComment] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        const fetchPost = async () => {\r\n            try {\r\n                const postResponse = await fetch(`http://localhost:9000/api/blog/posts/post/${post_id}`)\r\n                const postData = await postResponse.json()\r\n\r\n                const commentResponse = await fetch(`http://localhost:9000/api/blog/comments/post/${post_id}`)\r\n                const commentData = await commentResponse.json()\r\n\r\n                setPost(postData)\r\n                setComments(commentData)\r\n            } catch (err) {\r\n                console.error('Error fetching post: ', err)\r\n            }\r\n        }\r\n\r\n        fetchPost()\r\n    },[])\r\n\r\n    const handleAddComment = async() => {\r\n        const post_id = post_id\r\n\r\n        const response = await fetch('http://localhost:9000/api/blog/login', {\r\n                                    method: 'POST',\r\n                                    body: JSON.stringify(formData),\r\n                                    headers: { 'Content-Type' : 'application/json' }\r\n                                })\r\n        \r\n        if (!response.ok) {\r\n            \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <NavBar />\r\n            {post ? (\r\n                <div>\r\n                    <h2>{post.title}</h2>\r\n                    <p>{post.content}</p>\r\n                    <p><i>by <b>{post.username}</b></i></p>\r\n\r\n                    <h3>Comments</h3>\r\n                    {comments.length > 0 ? (\r\n                        <ul>\r\n                            {comments.map((comment) => (\r\n                                comment.comment ? (\r\n                                    <li key={comment.comment_id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p><i>by <b>{comment.username}</b></i></p>\r\n                                    </li>) : (null)\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <div>\r\n                            No comments available\r\n                        </div>\r\n                    )}\r\n                    <textarea rows='4' cols='75' placeholder=\"Add a comment...\" value={newComment} />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    Post unavailable\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}