{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SATHI220632\\\\Downloads\\\\Blog\\\\blog\\\\src\\\\components\\\\myposts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPostsPage({\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`http://localhost:9000/api/blog/posts/${user.username}`);\n        const data = await response.json();\n        setPosts(data);\n      } catch (err) {\n        console.error('Error fetching data: ', err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"by you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(MyPostsPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = MyPostsPage;\nvar _c;\n$RefreshReg$(_c, \"MyPostsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyPostsPage","user","_s","posts","setPosts","fetchPosts","response","fetch","username","data","json","err","console","error","children","length","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","post_id","_c","$RefreshReg$"],"sources":["C:/Users/SATHI220632/Downloads/Blog/blog/src/components/myposts.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nexport default function MyPostsPage({user}) {\r\n\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:9000/api/blog/posts/${user.username}`)\r\n                const data = await response.json()\r\n                setPosts(data)\r\n            } catch (err) {\r\n                console.error('Error fetching data: ', err)\r\n            }\r\n        }\r\n\r\n        fetchPosts()\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {posts.length > 0 ? (\r\n                <div>\r\n                    {\r\n                        posts.map((post) => (\r\n                            <div key={post.post_id}>\r\n                                <button><b>{post.title}</b></button>\r\n                                <p><i>by you</i></p>\r\n                                <hr />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            ) : (\r\n                <p> No posts available</p>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,WAAWA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAExC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAI;IACV,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCN,IAAI,CAACO,QAAS,EAAC,CAAC;QACrF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,QAAQ,CAACK,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC/C;IACJ,CAAC;IAEDN,UAAU,CAAC,CAAC;EAChB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIN,OAAA;IAAAe,QAAA,EACKX,KAAK,CAACY,MAAM,GAAG,CAAC,gBACbhB,OAAA;MAAAe,QAAA,EAEQX,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACXlB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAAe,QAAA,eAAQf,OAAA;YAAAe,QAAA,EAAIG,IAAI,CAACC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpCvB,OAAA;UAAAe,QAAA,eAAGf,OAAA;YAAAe,QAAA,EAAG;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpBvB,OAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHAL,IAAI,CAACM,OAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIjB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,gBAENvB,OAAA;MAAAe,QAAA,EAAG;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACpB,EAAA,CArCuBF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}